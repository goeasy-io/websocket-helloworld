<template>
  <view class="content">
    <view class="header">
      <text class="uni-title">GoEasy示例</text>
      <text class="uni-description">Hello world</text>
    </view>
    <view class="sendbox">
      <input class="uni-input" v-model="message" />
      <text class="uni-text" @click="sendMessage">发送</text>
    </view>
    <scroll-view class="messagecontent">
      <view class="messagetext" v-for="(msg, index) in messages" :key="index">{{msg}}</view>
    </scroll-view>
  </view>
</template>

<script>
  let goEasy = getApp().globalData.goEasy;
  let pubSub = goEasy.pubsub;
  export default {
    data() {
      return {
        message: "",//发送的消息内容
        messages:[],//接收到的消息列表
      }
    },
    onLoad() {
      let self = this;
      pubSub.subscribe({
          channel: "my_channel",
        onMessage: function (message) {
          self.unshiftMessage(message.content)
        },
          onSuccess: function () {
              self.unshiftMessage("订阅成功")
          },
                onFailed: function (error) {
                    self.unshiftMessage("消息发送失败，错误编码："+error.code+" 错误信息："+error.content);
                }
      });
    },
    methods: {
      sendMessage() {//发送消息
        var self = this;
        let body = this.message;
        if(this.message.length >= 50){
          body = this.message.substring(0,30)+"...";
        }
        pubSub.publish({
          channel: "my_channel",
          message: self.message,
                    //只要接收端APP正确配置UniPush，并且allowNotification为true，就可以接收通知栏提醒
                    //若不需要通知栏提醒，可以直接删掉notification
                    notification: {
                        title: "收到一条新消息",
                        body: body  // 字段最长50字符
                    },
          onSuccess:function(){
            self.message=''; //清空发送消息内容
            console.log("send message success");
          },
          onFailed:function(error){
            self.unshiftMessage("消息发送失败，错误编码："+error.code+" 错误信息："+error.content);
          }
        });
      },
      unshiftMessage(content) {
        var formattedTime = this.formatDate(new Date(), "hh:mm");
        var message = formattedTime +" "+ content;
        this.messages.unshift(message);
      },
      formatDate(date, format){
        var o = {
          "M+": date.getMonth() + 1,
          "d+": date.getDate(),
          "h+": date.getHours(),
          "m+": date.getMinutes(),
          "s+": date.getSeconds(),
          "q+": Math.floor((date.getMonth() + 3) / 3),
          "S": date.getMilliseconds()
        };
        if (/(y+)/.test(format))
          format = format.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
          if(o.hasOwnProperty(k)){
            if (new RegExp("(" + k + ")").test(format))
              format = format.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
          }
        return format;
      }
    }
  }
</script>

<style>
  .content{
    padding: 0 20px;
  }
  .header{
    flex-direction: column;
    align-items: center;
    margin-top: 50px;
  }
    .uni-title{
    height: 25px;
    line-height: 25px;
    font-size:24px;
    color:#D02129;
    font-family: Source Han Sans CN;
    font-weight: bold;
  }
  .uni-description{
    margin-top: 10px;
    height:28px;
    line-height: 28px;
    font-size:28px;
    font-weight: bold;
    color:#D02129;
    font-weight: bold;
    font-family: Source Han Sans CN;
  }
  .sendbox{
    flex-direction: row;
    align-items: center;
    height: 40px;
    margin-top: 32px;
    margin-bottom: 32px;
  }
  .uni-input{
    flex: 1;
    background-color: #EFEFEF;
    border-width: 1px;
    border-style: solid;
    border-color: #C8C7CC;
    border-radius: 6px;
    padding: 5px;
    font-size:16px;
    height:36px;
  }
  .uni-text{
    color:#D02129;
    margin-left:9px;
    font-size:15px;
    height: 40px;
    line-height: 40px;
    width: 40px;
  }
  .messagecontent{
    height: 300px;
    background-color: #fff;
    border-width: 1px;
    border-style: solid;
    border-color: #DADADA;
  }
  .messagetext{
    padding: 4px 11px;
    font-family: Source Han Sans CN;
  }
</style>
